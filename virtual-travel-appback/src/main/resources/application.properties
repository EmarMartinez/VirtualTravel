spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:file:~/virtualtravelback/${random.uuid};DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
hibernate.dialect=org.hibernate.dialect.HSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.application.name=backweb
server.port=0
eureka.instance.instance-id=${spring.application.name}:${random.uuid}



spring.kafka.consumer.bootstrap-servers: localhost:9092
#spring.kafka.consumer.group-id: grupoestadoreservas
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.spring.json.type.mapping=ReservaOutputDto:com.virtualtravelappback.infraestructure.controller.dto.ReservaOutputDto
spring.kafka.consumer.properties.spring.json.type.mapping=ReservaProcesadaOutputDto:com.virtualtravelappback.infraestructure.controller.dto.ReservaProcesadaInputDto

num_plazas_autobus=5