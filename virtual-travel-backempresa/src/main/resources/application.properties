server.port=8090
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:file:~/virtualtravelbackempresa
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
hibernate.dialect=org.hibernate.dialect.HSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.kafka.consumer.bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAPSERVERS:http://localhost:9092}

spring.kafka.consumer.group-id: gruporeservas
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.properties.spring.json.type.mapping=ReservaProcesadaOutputDto:com.virtualtravel.infraestructure.controller.dto.ReservaProcesadaOutputDto
spring.kafka.consumer.properties.spring.json.type.mapping=ReservaOutputDto:com.virtualtravel.infraestructure.controller.dto.ReservaInputDto

spring.kafka.producer.bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAPSERVERS:http://localhost:9092}

spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

secret=clavesupersecreta

num_plazas_autobus=5

spring.application.name=backempresa
eureka.instance.instance-id=${spring.application.name}:${random.uuid}


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=emarcuentapruebas@gmail.com
spring.mail.password=hygauzffhahbgfbs
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true